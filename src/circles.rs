use super::Point;

#[rustfmt::skip]
pub const CIRCLE13: [(i32, i32); 137] = [
                                            (-2, -6), (-1, -6), (0, -6), (1, -6), (2, -6),
                        (-4, -5), (-3, -5), (-2, -5), (-1, -5), (0, -5), (1, -5), (2, -5), (3, -5), (4, -5),
              (-5, -4), (-4, -4), (-3, -4), (-2, -4), (-1, -4), (0, -4), (1, -4), (2, -4), (3, -4), (4, -4), (5, -4),
              (-5, -3), (-4, -3), (-3, -3), (-2, -3), (-1, -3), (0, -3), (1, -3), (2, -3), (3, -3), (4, -3), (5, -3),
    (-6, -2), (-5, -2), (-4, -2), (-3, -2), (-2, -2), (-1, -2), (0, -2), (1, -2), (2, -2), (3, -2), (4, -2), (5, -2), (6, -2),
    (-6, -1), (-5, -1), (-4, -1), (-3, -1), (-2, -1), (-1, -1), (0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1),
    (-6,  0), (-5,  0), (-4,  0), (-3,  0), (-2,  0), (-1,  0), (0,  0), (1,  0), (2,  0), (3,  0), (4,  0), (5,  0), (6,  0),
    (-6,  1), (-5,  1), (-4,  1), (-3,  1), (-2,  1), (-1,  1), (0,  1), (1,  1), (2,  1), (3,  1), (4,  1), (5,  1), (6,  1),
    (-6,  2), (-5,  2), (-4,  2), (-3,  2), (-2,  2), (-1,  2), (0,  2), (1,  2), (2,  2), (3,  2), (4,  2), (5,  2), (6,  2),
              (-5,  3), (-4,  3), (-3,  3), (-2,  3), (-1,  3), (0,  3), (1,  3), (2,  3), (3,  3), (4,  3), (5,  3),
              (-5,  4), (-4,  4), (-3,  4), (-2,  4), (-1,  4), (0,  4), (1,  4), (2,  4), (3,  4), (4,  4), (5,  4),
                        (-4,  5), (-3,  5), (-2,  5), (-1,  5), (0,  5), (1,  5), (2,  5), (3,  5), (4,  5),
                                            (-2,  6), (-1,  6), (0,  6), (1,  6), (2,  6),
];

#[rustfmt::skip]
pub const CIRCLE11: [(i32, i32); 97] = [
                                  (-2, -5), (-1, -5), (0, -5), (1, -5), (2, -5),
                        (-3, -4), (-2, -4), (-1, -4), (0, -4), (1, -4), (2, -4), (3, -4),
              (-4, -3), (-3, -3), (-2, -3), (-1, -3), (0, -3), (1, -3), (2, -3), (3, -3), (4, -3),
    (-5, -2), (-4, -2), (-3, -2), (-2, -2), (-1, -2), (0, -2), (1, -2), (2, -2), (3, -2), (4, -2), (5, -2),
    (-5, -1), (-4, -1), (-3, -1), (-2, -1), (-1, -1), (0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1),
    (-5,  0), (-4,  0), (-3,  0), (-2,  0), (-1,  0), (0,  0), (1,  0), (2,  0), (3,  0), (4,  0), (5,  0),
    (-5,  1), (-4,  1), (-3,  1), (-2,  1), (-1,  1), (0,  1), (1,  1), (2,  1), (3,  1), (4,  1), (5,  1),
    (-5,  2), (-4,  2), (-3,  2), (-2,  2), (-1,  2), (0,  2), (1,  2), (2,  2), (3,  2), (4,  2), (5,  2),
              (-4,  3), (-3,  3), (-2,  3), (-1,  3), (0,  3), (1,  3), (2,  3), (3,  3), (4,  3),
                        (-3,  4), (-2,  4), (-1,  4), (0,  4), (1,  4), (2,  4), (3,  4),
                                  (-2,  5), (-1,  5), (0,  5), (1,  5), (2,  5),
];

#[rustfmt::skip]
pub const CIRCLE9: [(i32, i32); 69] = [
                        (-2, -4), (-1, -4), (0, -4), (1, -4), (2, -4),
              (-3, -3), (-2, -3), (-1, -3), (0, -3), (1, -3), (2, -3), (3, -3),
    (-4, -2), (-3, -2), (-2, -2), (-1, -2), (0, -2), (1, -2), (2, -2), (3, -2), (4, -2),
    (-4, -1), (-3, -1), (-2, -1), (-1, -1), (0, -1), (1, -1), (2, -1), (3, -1), (4, -1),
    (-4,  0), (-3,  0), (-2,  0), (-1,  0), (0,  0), (1,  0), (2,  0), (3,  0), (4,  0),
    (-4,  1), (-3,  1), (-2,  1), (-1,  1), (0,  1), (1,  1), (2,  1), (3,  1), (4,  1),
    (-4,  2), (-3,  2), (-2,  2), (-1,  2), (0,  2), (1,  2), (2,  2), (3,  2), (4,  2), 
              (-3,  3), (-2,  3), (-1,  3), (0,  3), (1,  3), (2,  3), (3,  3),
                        (-2,  4), (-1,  4), (0,  4), (1,  4), (2,  4),
];

#[rustfmt::skip]
pub const CIRCLE7: [(i32, i32); 37] = [
                        (-1, -3), (0, -3), (1, -3),
              (-2, -2), (-1, -2), (0, -2), (1, -2), (2, -2),
    (-3, -1), (-2, -1), (-1, -1), (0, -1), (1, -1), (2, -1), (3, -1),
    (-3,  0), (-2,  0), (-1,  0), (0,  0), (1,  0), (2,  0), (3,  0),
    (-3,  1), (-2,  1), (-1,  1), (0,  1), (1,  1), (2,  1), (3,  1),
              (-2,  2), (-1,  2), (0,  2), (1,  2), (2,  2),
                        (-1,  3), (0,  3), (1,  3),
];

#[rustfmt::skip]
pub const CIRCLE5: [(i32, i32); 21] = [
              (-1, -2), (0, -2), (1, -2),
    (-2, -1), (-1, -1), (0, -1), (1, -1), (2, -1),
    (-2,  0), (-1,  0), (0,  0), (1,  0), (2,  0),
    (-2,  1), (-1,  1), (0,  1), (1,  1), (2,  1),
              (-1,  2), (0,  2), (1,  2),
];

/// Returns a list of points that are on the circle with the given center and radius.
pub fn circle(center: Point, radius: i32) -> Vec<Point> {
    line_drawing::BresenhamCircle::new(center.x, center.y, radius)
        .map(Point::from)
        .collect()
}
